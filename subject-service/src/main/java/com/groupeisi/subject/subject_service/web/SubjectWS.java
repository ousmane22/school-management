package com.groupeisi.subject.subject_service.web;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.0.0
 * 2025-01-02T08:10:59.318Z
 * Generated source version: 4.0.0
 *
 */
@WebServiceClient(name = "SubjectWS",
                  wsdlLocation = "file:/C:/Users/OUSMANE%20NDIAYE/Desktop/MASTER2/web_services/school-management/subject-service/src/main/resources/SubjectService.wsdl",
                  targetNamespace = "http://web.subject_service.subject.groupeisi.com/")
public class SubjectWS extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://web.subject_service.subject.groupeisi.com/", "SubjectWS");
    public final static QName SubjectSoapServicePort = new QName("http://web.subject_service.subject.groupeisi.com/", "SubjectSoapServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/OUSMANE%20NDIAYE/Desktop/MASTER2/web_services/school-management/subject-service/src/main/resources/SubjectService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SubjectWS.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/OUSMANE%20NDIAYE/Desktop/MASTER2/web_services/school-management/subject-service/src/main/resources/SubjectService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SubjectWS(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SubjectWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SubjectWS() {
        super(WSDL_LOCATION, SERVICE);
    }

    public SubjectWS(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SubjectWS(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SubjectWS(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns SubjectSoapService
     */
    @WebEndpoint(name = "SubjectSoapServicePort")
    public SubjectSoapService getSubjectSoapServicePort() {
        return super.getPort(SubjectSoapServicePort, SubjectSoapService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SubjectSoapService
     */
    @WebEndpoint(name = "SubjectSoapServicePort")
    public SubjectSoapService getSubjectSoapServicePort(WebServiceFeature... features) {
        return super.getPort(SubjectSoapServicePort, SubjectSoapService.class, features);
    }

}
